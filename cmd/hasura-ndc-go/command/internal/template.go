package internal

import (
	_ "embed"
	"strings"
)

const (
	connectorOutputFile   = "connector.generated.go"
	schemaOutputJSONFile  = "schema.generated.json"
	schemaOutputGoFile    = "schema.generated.go"
	typeMethodsOutputFile = "types.generated.go"
)

//go:embed templates/connector/connector.go.tmpl
var connectorTemplateStr string

func writeFileHeader(builder *strings.Builder, packageName string) {
	_, _ = builder.WriteString(
		`// Code generated by github.com/hasura/ndc-sdk-go/v2/cmd/hasura-ndc-go, DO NOT EDIT.
package `,
	)
	_, _ = builder.WriteString(packageName)
	_, _ = builder.WriteRune('\n')
}

func writeIndent(builder *strings.Builder, num int) {
	for range num {
		_, _ = builder.WriteRune(' ')
	}
}

func writeErrorCheck(sb *strings.Builder, paramCount int, indent int) {
	sb.WriteRune('\n')
	writeIndent(sb, indent)
	sb.WriteString("if err != nil {\n")
	writeIndent(sb, indent)
	sb.WriteString("  return ")

	for i := range paramCount {
		if i == paramCount-1 {
			sb.WriteString("err")
		} else {
			sb.WriteString("nil, ")
		}
	}

	sb.WriteRune('\n')
	writeIndent(sb, indent)
	sb.WriteString("}\n")
}
