// Code generated by github.com/hasura/ndc-sdk-go/cmd/hasura-ndc-go, DO NOT EDIT.
package main

import (
  "github.com/hasura/ndc-sdk-go/schema"
)

func toPtr[V any](value V) *V {
  return &value
}

// GetConnectorSchema gets the generated connector schema
func GetConnectorSchema() *schema.SchemaResponse {
  return &schema.SchemaResponse{
    Collections: []schema.CollectionInfo{},
    ObjectTypes: schema.SchemaResponseObjectTypes{
      "Author": schema.ObjectType{
        Fields: schema.ObjectTypeFields{
          "created_at": schema.ObjectField{
            Type: schema.NewNamedType("TimestampTZ").Encode(),
          },
          "id": schema.ObjectField{
            Type: schema.NewNamedType("String").Encode(),
          },
        },
        ForeignKeys: schema.ObjectTypeForeignKeys{},
      },
      "BaseAuthor": schema.ObjectType{
        Fields: schema.ObjectTypeFields{
          "name": schema.ObjectField{
            Type: schema.NewNamedType("String").Encode(),
          },
        },
        ForeignKeys: schema.ObjectTypeForeignKeys{},
      },
      "CreateArticleArgumentsAuthor": schema.ObjectType{
        Fields: schema.ObjectTypeFields{
          "created_at": schema.ObjectField{
            Type: schema.NewNamedType("TimestampTZ").Encode(),
          },
          "id": schema.ObjectField{
            Type: schema.NewNamedType("UUID").Encode(),
          },
        },
        ForeignKeys: schema.ObjectTypeForeignKeys{},
      },
      "CreateArticleResult": schema.ObjectType{
        Fields: schema.ObjectTypeFields{
          "authors": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("Author")).Encode(),
          },
          "id": schema.ObjectField{
            Type: schema.NewNamedType("Int32").Encode(),
          },
        },
        ForeignKeys: schema.ObjectTypeForeignKeys{},
      },
      "CreateAuthorResult": schema.ObjectType{
        Fields: schema.ObjectTypeFields{
          "created_at": schema.ObjectField{
            Type: schema.NewNamedType("TimestampTZ").Encode(),
          },
          "id": schema.ObjectField{
            Type: schema.NewNamedType("Int32").Encode(),
          },
          "name": schema.ObjectField{
            Type: schema.NewNamedType("String").Encode(),
          },
        },
        ForeignKeys: schema.ObjectTypeForeignKeys{},
      },
      "CustomHeadersResult_array_nullable_BaseAuthor": schema.ObjectType{
        Fields: schema.ObjectTypeFields{
          "Response": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("BaseAuthor"))).Encode(),
          },
          "headers": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("JSON")).Encode(),
          },
        },
        ForeignKeys: schema.ObjectTypeForeignKeys{},
      },
      "GetArticlesResult": schema.ObjectType{
        Fields: schema.ObjectTypeFields{
          "Name": schema.ObjectField{
            Type: schema.NewNamedType("String").Encode(),
          },
          "id": schema.ObjectField{
            Type: schema.NewNamedType("String").Encode(),
          },
        },
        ForeignKeys: schema.ObjectTypeForeignKeys{},
      },
      "GetCustomHeadersOther_int": schema.ObjectType{
        Fields: schema.ObjectTypeFields{
          "value": schema.ObjectField{
            Type: schema.NewNamedType("Int32").Encode(),
          },
        },
        ForeignKeys: schema.ObjectTypeForeignKeys{},
      },
      "GetCustomHeadersOther_int64": schema.ObjectType{
        Fields: schema.ObjectTypeFields{
          "value": schema.ObjectField{
            Type: schema.NewNamedType("Int64").Encode(),
          },
        },
        ForeignKeys: schema.ObjectTypeForeignKeys{},
      },
      "GetCustomHeadersResult_HelloResult_int64": schema.ObjectType{
        Fields: schema.ObjectTypeFields{
          "Response": schema.ObjectField{
            Type: schema.NewNamedType("HelloResult").Encode(),
          },
          "headers": schema.ObjectField{
            Type: schema.NewNamedType("JSON").Encode(),
          },
          "other": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("GetCustomHeadersOther_int64")).Encode(),
          },
        },
        ForeignKeys: schema.ObjectTypeForeignKeys{},
      },
      "GetTypesArguments": schema.ObjectType{
        Fields: schema.ObjectTypeFields{
          "ArrayBigInt": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("BigInt")).Encode(),
          },
          "ArrayBigIntPtr": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("BigInt"))).Encode(),
          },
          "ArrayBool": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("Boolean")).Encode(),
          },
          "ArrayBoolPtr": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Boolean"))).Encode(),
          },
          "ArrayFloat32": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("Float32")).Encode(),
          },
          "ArrayFloat32Ptr": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Float32"))).Encode(),
          },
          "ArrayFloat64": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("Float64")).Encode(),
          },
          "ArrayFloat64Ptr": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Float64"))).Encode(),
          },
          "ArrayInt": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("Int32")).Encode(),
          },
          "ArrayInt16": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("Int16")).Encode(),
          },
          "ArrayInt16Ptr": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int16"))).Encode(),
          },
          "ArrayInt32": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("Int32")).Encode(),
          },
          "ArrayInt32Ptr": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32"))).Encode(),
          },
          "ArrayInt64": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("Int64")).Encode(),
          },
          "ArrayInt64Ptr": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int64"))).Encode(),
          },
          "ArrayInt8": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("Int8")).Encode(),
          },
          "ArrayInt8Ptr": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int8"))).Encode(),
          },
          "ArrayIntPtr": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32"))).Encode(),
          },
          "ArrayJSON": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("JSON")).Encode(),
          },
          "ArrayJSONPtr": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("JSON"))).Encode(),
          },
          "ArrayMap": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("JSON")).Encode(),
          },
          "ArrayMapPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("JSON"))).Encode(),
          },
          "ArrayObject": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("GetTypesArgumentsArrayObject")).Encode(),
          },
          "ArrayObjectPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("GetTypesArgumentsArrayObjectPtr"))).Encode(),
          },
          "ArrayRawJSON": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("RawJSON")).Encode(),
          },
          "ArrayRawJSONPtr": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("RawJSON"))).Encode(),
          },
          "ArrayString": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("String")).Encode(),
          },
          "ArrayStringPtr": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("String"))).Encode(),
          },
          "ArrayTime": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("TimestampTZ")).Encode(),
          },
          "ArrayTimePtr": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("TimestampTZ"))).Encode(),
          },
          "ArrayUUID": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("UUID")).Encode(),
          },
          "ArrayUUIDPtr": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("UUID"))).Encode(),
          },
          "ArrayUint": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("Int32")).Encode(),
          },
          "ArrayUint16": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("Int16")).Encode(),
          },
          "ArrayUint16Ptr": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int16"))).Encode(),
          },
          "ArrayUint32": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("Int32")).Encode(),
          },
          "ArrayUint32Ptr": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32"))).Encode(),
          },
          "ArrayUint64": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("Int64")).Encode(),
          },
          "ArrayUint64Ptr": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int64"))).Encode(),
          },
          "ArrayUint8": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("Int8")).Encode(),
          },
          "ArrayUint8Ptr": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int8"))).Encode(),
          },
          "ArrayUintPtr": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32"))).Encode(),
          },
          "BigInt": schema.ObjectField{
            Type: schema.NewNamedType("BigInt").Encode(),
          },
          "BigIntPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("BigInt")).Encode(),
          },
          "Bool": schema.ObjectField{
            Type: schema.NewNamedType("Boolean").Encode(),
          },
          "BoolPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Boolean")).Encode(),
          },
          "Bytes": schema.ObjectField{
            Type: schema.NewNamedType("Bytes").Encode(),
          },
          "BytesPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Bytes")).Encode(),
          },
          "CustomScalar": schema.ObjectField{
            Type: schema.NewNamedType("CommentString").Encode(),
          },
          "CustomScalarPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("CommentString")).Encode(),
          },
          "Duration": schema.ObjectField{
            Type: schema.NewNamedType("Duration").Encode(),
          },
          "DurationInt64": schema.ObjectField{
            Type: schema.NewNamedType("DurationInt64").Encode(),
          },
          "DurationString": schema.ObjectField{
            Type: schema.NewNamedType("DurationString").Encode(),
          },
          "Enum": schema.ObjectField{
            Type: schema.NewNamedType("SomeEnum").Encode(),
          },
          "EnumPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("SomeEnum")).Encode(),
          },
          "Float32": schema.ObjectField{
            Type: schema.NewNamedType("Float32").Encode(),
          },
          "Float32Ptr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Float32")).Encode(),
          },
          "Float64": schema.ObjectField{
            Type: schema.NewNamedType("Float64").Encode(),
          },
          "Float64Ptr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Float64")).Encode(),
          },
          "Int": schema.ObjectField{
            Type: schema.NewNamedType("Int32").Encode(),
          },
          "Int16": schema.ObjectField{
            Type: schema.NewNamedType("Int16").Encode(),
          },
          "Int16Ptr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Int16")).Encode(),
          },
          "Int32": schema.ObjectField{
            Type: schema.NewNamedType("Int32").Encode(),
          },
          "Int32Ptr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Int32")).Encode(),
          },
          "Int64": schema.ObjectField{
            Type: schema.NewNamedType("Int64").Encode(),
          },
          "Int64Ptr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Int64")).Encode(),
          },
          "Int8": schema.ObjectField{
            Type: schema.NewNamedType("Int8").Encode(),
          },
          "Int8Ptr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Int8")).Encode(),
          },
          "IntPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Int32")).Encode(),
          },
          "JSON": schema.ObjectField{
            Type: schema.NewNamedType("JSON").Encode(),
          },
          "JSONPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("JSON")).Encode(),
          },
          "Map": schema.ObjectField{
            Type: schema.NewNamedType("JSON").Encode(),
          },
          "MapPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("JSON")).Encode(),
          },
          "NamedArray": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("Author")).Encode(),
          },
          "NamedArrayPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Author"))).Encode(),
          },
          "NamedObject": schema.ObjectField{
            Type: schema.NewNamedType("Author").Encode(),
          },
          "NamedObjectPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Author")).Encode(),
          },
          "Object": schema.ObjectField{
            Type: schema.NewNamedType("GetTypesArgumentsObject").Encode(),
          },
          "ObjectPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("GetTypesArgumentsObjectPtr")).Encode(),
          },
          "PtrArrayBigInt": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("BigInt"))).Encode(),
          },
          "PtrArrayBigIntPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("BigInt")))).Encode(),
          },
          "PtrArrayBool": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Boolean"))).Encode(),
          },
          "PtrArrayBoolPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Boolean")))).Encode(),
          },
          "PtrArrayFloat32": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Float32"))).Encode(),
          },
          "PtrArrayFloat32Ptr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Float32")))).Encode(),
          },
          "PtrArrayFloat64": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Float64"))).Encode(),
          },
          "PtrArrayFloat64Ptr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Float64")))).Encode(),
          },
          "PtrArrayInt": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int32"))).Encode(),
          },
          "PtrArrayInt16": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int16"))).Encode(),
          },
          "PtrArrayInt16Ptr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int16")))).Encode(),
          },
          "PtrArrayInt32": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int32"))).Encode(),
          },
          "PtrArrayInt32Ptr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32")))).Encode(),
          },
          "PtrArrayInt64": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int64"))).Encode(),
          },
          "PtrArrayInt64Ptr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int64")))).Encode(),
          },
          "PtrArrayInt8": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int8"))).Encode(),
          },
          "PtrArrayInt8Ptr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int8")))).Encode(),
          },
          "PtrArrayIntPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32")))).Encode(),
          },
          "PtrArrayJSON": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("JSON"))).Encode(),
          },
          "PtrArrayJSONPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("JSON")))).Encode(),
          },
          "PtrArrayRawJSON": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("RawJSON"))).Encode(),
          },
          "PtrArrayRawJSONPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("RawJSON")))).Encode(),
          },
          "PtrArrayString": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("String"))).Encode(),
          },
          "PtrArrayStringPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("String")))).Encode(),
          },
          "PtrArrayTime": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("TimestampTZ"))).Encode(),
          },
          "PtrArrayTimePtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("TimestampTZ")))).Encode(),
          },
          "PtrArrayUUID": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("UUID"))).Encode(),
          },
          "PtrArrayUUIDPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("UUID")))).Encode(),
          },
          "PtrArrayUint": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int32"))).Encode(),
          },
          "PtrArrayUint16": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int16"))).Encode(),
          },
          "PtrArrayUint16Ptr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int16")))).Encode(),
          },
          "PtrArrayUint32": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int32"))).Encode(),
          },
          "PtrArrayUint32Ptr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32")))).Encode(),
          },
          "PtrArrayUint64": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int64"))).Encode(),
          },
          "PtrArrayUint64Ptr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int64")))).Encode(),
          },
          "PtrArrayUint8": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int8"))).Encode(),
          },
          "PtrArrayUint8Ptr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int8")))).Encode(),
          },
          "PtrArrayUintPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32")))).Encode(),
          },
          "RawJSON": schema.ObjectField{
            Type: schema.NewNamedType("RawJSON").Encode(),
          },
          "RawJSONPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("RawJSON")).Encode(),
          },
          "String": schema.ObjectField{
            Type: schema.NewNamedType("String").Encode(),
          },
          "StringPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("String")).Encode(),
          },
          "Text": schema.ObjectField{
            Type: schema.NewNamedType("String").Encode(),
          },
          "TextPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("String")).Encode(),
          },
          "Time": schema.ObjectField{
            Type: schema.NewNamedType("TimestampTZ").Encode(),
          },
          "TimePtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("TimestampTZ")).Encode(),
          },
          "URL": schema.ObjectField{
            Type: schema.NewNamedType("URL").Encode(),
          },
          "UUID": schema.ObjectField{
            Type: schema.NewNamedType("UUID").Encode(),
          },
          "UUIDArray": schema.ObjectField{
            Type: schema.NewArrayType(schema.NewNamedType("UUID")).Encode(),
          },
          "UUIDPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("UUID")).Encode(),
          },
          "Uint": schema.ObjectField{
            Type: schema.NewNamedType("Int32").Encode(),
          },
          "Uint16": schema.ObjectField{
            Type: schema.NewNamedType("Int16").Encode(),
          },
          "Uint16Ptr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Int16")).Encode(),
          },
          "Uint32": schema.ObjectField{
            Type: schema.NewNamedType("Int32").Encode(),
          },
          "Uint32Ptr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Int32")).Encode(),
          },
          "Uint64": schema.ObjectField{
            Type: schema.NewNamedType("Int64").Encode(),
          },
          "Uint64Ptr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Int64")).Encode(),
          },
          "Uint8": schema.ObjectField{
            Type: schema.NewNamedType("Int8").Encode(),
          },
          "Uint8Ptr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Int8")).Encode(),
          },
          "UintPtr": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Int32")).Encode(),
          },
          "array_bigint_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("BigInt"))).Encode(),
          },
          "array_bigint_ptr_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("BigInt")))).Encode(),
          },
          "array_bool_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Boolean"))).Encode(),
          },
          "array_bool_ptr_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Boolean")))).Encode(),
          },
          "array_float32_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Float32"))).Encode(),
          },
          "array_float32_ptr_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Float32")))).Encode(),
          },
          "array_float64_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Float64"))).Encode(),
          },
          "array_float64_ptr_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Float64")))).Encode(),
          },
          "array_int16_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int16"))).Encode(),
          },
          "array_int16_ptr_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int16")))).Encode(),
          },
          "array_int32_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int32"))).Encode(),
          },
          "array_int32_ptr_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32")))).Encode(),
          },
          "array_int64_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int64"))).Encode(),
          },
          "array_int64_ptr_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int64")))).Encode(),
          },
          "array_int8_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int8"))).Encode(),
          },
          "array_int8_ptr_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int8")))).Encode(),
          },
          "array_int_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int32"))).Encode(),
          },
          "array_int_ptr_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32")))).Encode(),
          },
          "array_json_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("JSON"))).Encode(),
          },
          "array_json_ptr_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("JSON")))).Encode(),
          },
          "array_raw_json_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("RawJSON"))).Encode(),
          },
          "array_raw_json_ptr_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("RawJSON")))).Encode(),
          },
          "array_string_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("String"))).Encode(),
          },
          "array_string_ptr_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("String")))).Encode(),
          },
          "array_time_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("TimestampTZ"))).Encode(),
          },
          "array_time_ptr_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("TimestampTZ")))).Encode(),
          },
          "array_uint16_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int16"))).Encode(),
          },
          "array_uint16_ptr_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int16")))).Encode(),
          },
          "array_uint32_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int32"))).Encode(),
          },
          "array_uint32_ptr_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32")))).Encode(),
          },
          "array_uint64_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int64"))).Encode(),
          },
          "array_uint64_ptr_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int64")))).Encode(),
          },
          "array_uint8_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int8"))).Encode(),
          },
          "array_uint8_ptr_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int8")))).Encode(),
          },
          "array_uint_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int32"))).Encode(),
          },
          "array_uint_ptr_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32")))).Encode(),
          },
          "array_uuid_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("UUID"))).Encode(),
          },
          "array_uuid_ptr_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("UUID")))).Encode(),
          },
          "bigint_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("BigInt")).Encode(),
          },
          "bool_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Boolean")).Encode(),
          },
          "date_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Date")).Encode(),
          },
          "float32_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Float32")).Encode(),
          },
          "float64_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Float64")).Encode(),
          },
          "int16_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Int16")).Encode(),
          },
          "int32_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Int32")).Encode(),
          },
          "int64_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Int64")).Encode(),
          },
          "int8_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Int8")).Encode(),
          },
          "int_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Int32")).Encode(),
          },
          "string_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("String")).Encode(),
          },
          "time_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("TimestampTZ")).Encode(),
          },
          "uint16_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Int16")).Encode(),
          },
          "uint32_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Int32")).Encode(),
          },
          "uint64_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Int64")).Encode(),
          },
          "uint8_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Int8")).Encode(),
          },
          "uint_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("Int32")).Encode(),
          },
          "url_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("URL")).Encode(),
          },
          "uuid_empty": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("UUID")).Encode(),
          },
          "where": schema.ObjectField{
            Type: schema.NewNamedType("JSON").Encode(),
          },
        },
        ForeignKeys: schema.ObjectTypeForeignKeys{},
      },
      "GetTypesArgumentsArrayObject": schema.ObjectType{
        Fields: schema.ObjectTypeFields{
          "content": schema.ObjectField{
            Type: schema.NewNamedType("String").Encode(),
          },
        },
        ForeignKeys: schema.ObjectTypeForeignKeys{},
      },
      "GetTypesArgumentsArrayObjectPtr": schema.ObjectType{
        Fields: schema.ObjectTypeFields{
          "content": schema.ObjectField{
            Type: schema.NewNamedType("String").Encode(),
          },
        },
        ForeignKeys: schema.ObjectTypeForeignKeys{},
      },
      "GetTypesArgumentsObject": schema.ObjectType{
        Fields: schema.ObjectTypeFields{
          "created_at": schema.ObjectField{
            Type: schema.NewNamedType("TimestampTZ").Encode(),
          },
          "id": schema.ObjectField{
            Type: schema.NewNamedType("UUID").Encode(),
          },
        },
        ForeignKeys: schema.ObjectTypeForeignKeys{},
      },
      "GetTypesArgumentsObjectPtr": schema.ObjectType{
        Fields: schema.ObjectTypeFields{
          "Lat": schema.ObjectField{
            Type: schema.NewNamedType("Int32").Encode(),
          },
          "Long": schema.ObjectField{
            Type: schema.NewNamedType("Int32").Encode(),
          },
        },
        ForeignKeys: schema.ObjectTypeForeignKeys{},
      },
      "HelloResult": schema.ObjectType{
        Fields: schema.ObjectTypeFields{
          "error": schema.ObjectField{
            Type: schema.NewNullableType(schema.NewNamedType("JSON")).Encode(),
          },
          "foo": schema.ObjectField{
            Type: schema.NewNamedType("Foo").Encode(),
          },
          "id": schema.ObjectField{
            Type: schema.NewNamedType("UUID").Encode(),
          },
          "num": schema.ObjectField{
            Type: schema.NewNamedType("Int32").Encode(),
          },
          "text": schema.ObjectField{
            Type: schema.NewNamedType("String").Encode(),
          },
        },
        ForeignKeys: schema.ObjectTypeForeignKeys{},
      },
    },
    Functions: []schema.FunctionInfo{
      {
        Name: "getArticles",
        Description: toPtr("GetArticles"),
        ResultType: schema.NewArrayType(schema.NewNamedType("GetArticlesResult")).Encode(),
        Arguments: map[string]schema.ArgumentInfo{
          "Limit": {
            Type: schema.NewNamedType("Float64").Encode(),
          },
        },
      },
      {
        Name: "getBool",
        Description: toPtr("return an scalar boolean"),
        ResultType: schema.NewNamedType("Boolean").Encode(),
        Arguments: map[string]schema.ArgumentInfo{
        },
      },
      {
        Name: "getCustomHeaders",
        ResultType: schema.NewNamedType("GetCustomHeadersResult_HelloResult_int64").Encode(),
        Arguments: map[string]schema.ArgumentInfo{
          "headers": {
            Type: schema.NewNamedType("JSON").Encode(),
          },
          "input": {
            Type: schema.NewNullableType(schema.NewNamedType("BaseAuthor")).Encode(),
          },
          "other": {
            Type: schema.NewNullableType(schema.NewNamedType("GetCustomHeadersOther_int")).Encode(),
          },
        },
      },
      {
        Name: "getTypes",
        ResultType: schema.NewNullableType(schema.NewNamedType("GetTypesArguments")).Encode(),
        Arguments: map[string]schema.ArgumentInfo{
          "ArrayBigInt": {
            Type: schema.NewArrayType(schema.NewNamedType("BigInt")).Encode(),
          },
          "ArrayBigIntPtr": {
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("BigInt"))).Encode(),
          },
          "ArrayBool": {
            Type: schema.NewArrayType(schema.NewNamedType("Boolean")).Encode(),
          },
          "ArrayBoolPtr": {
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Boolean"))).Encode(),
          },
          "ArrayFloat32": {
            Type: schema.NewArrayType(schema.NewNamedType("Float32")).Encode(),
          },
          "ArrayFloat32Ptr": {
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Float32"))).Encode(),
          },
          "ArrayFloat64": {
            Type: schema.NewArrayType(schema.NewNamedType("Float64")).Encode(),
          },
          "ArrayFloat64Ptr": {
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Float64"))).Encode(),
          },
          "ArrayInt": {
            Type: schema.NewArrayType(schema.NewNamedType("Int32")).Encode(),
          },
          "ArrayInt16": {
            Type: schema.NewArrayType(schema.NewNamedType("Int16")).Encode(),
          },
          "ArrayInt16Ptr": {
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int16"))).Encode(),
          },
          "ArrayInt32": {
            Type: schema.NewArrayType(schema.NewNamedType("Int32")).Encode(),
          },
          "ArrayInt32Ptr": {
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32"))).Encode(),
          },
          "ArrayInt64": {
            Type: schema.NewArrayType(schema.NewNamedType("Int64")).Encode(),
          },
          "ArrayInt64Ptr": {
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int64"))).Encode(),
          },
          "ArrayInt8": {
            Type: schema.NewArrayType(schema.NewNamedType("Int8")).Encode(),
          },
          "ArrayInt8Ptr": {
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int8"))).Encode(),
          },
          "ArrayIntPtr": {
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32"))).Encode(),
          },
          "ArrayJSON": {
            Type: schema.NewArrayType(schema.NewNamedType("JSON")).Encode(),
          },
          "ArrayJSONPtr": {
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("JSON"))).Encode(),
          },
          "ArrayMap": {
            Type: schema.NewArrayType(schema.NewNamedType("JSON")).Encode(),
          },
          "ArrayMapPtr": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("JSON"))).Encode(),
          },
          "ArrayObject": {
            Type: schema.NewArrayType(schema.NewNamedType("GetTypesArgumentsArrayObject")).Encode(),
          },
          "ArrayObjectPtr": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("GetTypesArgumentsArrayObjectPtr"))).Encode(),
          },
          "ArrayRawJSON": {
            Type: schema.NewArrayType(schema.NewNamedType("RawJSON")).Encode(),
          },
          "ArrayRawJSONPtr": {
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("RawJSON"))).Encode(),
          },
          "ArrayString": {
            Type: schema.NewArrayType(schema.NewNamedType("String")).Encode(),
          },
          "ArrayStringPtr": {
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("String"))).Encode(),
          },
          "ArrayTime": {
            Type: schema.NewArrayType(schema.NewNamedType("TimestampTZ")).Encode(),
          },
          "ArrayTimePtr": {
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("TimestampTZ"))).Encode(),
          },
          "ArrayUUID": {
            Type: schema.NewArrayType(schema.NewNamedType("UUID")).Encode(),
          },
          "ArrayUUIDPtr": {
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("UUID"))).Encode(),
          },
          "ArrayUint": {
            Type: schema.NewArrayType(schema.NewNamedType("Int32")).Encode(),
          },
          "ArrayUint16": {
            Type: schema.NewArrayType(schema.NewNamedType("Int16")).Encode(),
          },
          "ArrayUint16Ptr": {
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int16"))).Encode(),
          },
          "ArrayUint32": {
            Type: schema.NewArrayType(schema.NewNamedType("Int32")).Encode(),
          },
          "ArrayUint32Ptr": {
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32"))).Encode(),
          },
          "ArrayUint64": {
            Type: schema.NewArrayType(schema.NewNamedType("Int64")).Encode(),
          },
          "ArrayUint64Ptr": {
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int64"))).Encode(),
          },
          "ArrayUint8": {
            Type: schema.NewArrayType(schema.NewNamedType("Int8")).Encode(),
          },
          "ArrayUint8Ptr": {
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int8"))).Encode(),
          },
          "ArrayUintPtr": {
            Type: schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32"))).Encode(),
          },
          "BigInt": {
            Type: schema.NewNamedType("BigInt").Encode(),
          },
          "BigIntPtr": {
            Type: schema.NewNullableType(schema.NewNamedType("BigInt")).Encode(),
          },
          "Bool": {
            Type: schema.NewNamedType("Boolean").Encode(),
          },
          "BoolPtr": {
            Type: schema.NewNullableType(schema.NewNamedType("Boolean")).Encode(),
          },
          "Bytes": {
            Type: schema.NewNamedType("Bytes").Encode(),
          },
          "BytesPtr": {
            Type: schema.NewNullableType(schema.NewNamedType("Bytes")).Encode(),
          },
          "CustomScalar": {
            Type: schema.NewNamedType("CommentString").Encode(),
          },
          "CustomScalarPtr": {
            Type: schema.NewNullableType(schema.NewNamedType("CommentString")).Encode(),
          },
          "Duration": {
            Type: schema.NewNamedType("Duration").Encode(),
          },
          "DurationInt64": {
            Type: schema.NewNamedType("DurationInt64").Encode(),
          },
          "DurationString": {
            Type: schema.NewNamedType("DurationString").Encode(),
          },
          "Enum": {
            Type: schema.NewNamedType("SomeEnum").Encode(),
          },
          "EnumPtr": {
            Type: schema.NewNullableType(schema.NewNamedType("SomeEnum")).Encode(),
          },
          "Float32": {
            Type: schema.NewNamedType("Float32").Encode(),
          },
          "Float32Ptr": {
            Type: schema.NewNullableType(schema.NewNamedType("Float32")).Encode(),
          },
          "Float64": {
            Type: schema.NewNamedType("Float64").Encode(),
          },
          "Float64Ptr": {
            Type: schema.NewNullableType(schema.NewNamedType("Float64")).Encode(),
          },
          "Int": {
            Type: schema.NewNamedType("Int32").Encode(),
          },
          "Int16": {
            Type: schema.NewNamedType("Int16").Encode(),
          },
          "Int16Ptr": {
            Type: schema.NewNullableType(schema.NewNamedType("Int16")).Encode(),
          },
          "Int32": {
            Type: schema.NewNamedType("Int32").Encode(),
          },
          "Int32Ptr": {
            Type: schema.NewNullableType(schema.NewNamedType("Int32")).Encode(),
          },
          "Int64": {
            Type: schema.NewNamedType("Int64").Encode(),
          },
          "Int64Ptr": {
            Type: schema.NewNullableType(schema.NewNamedType("Int64")).Encode(),
          },
          "Int8": {
            Type: schema.NewNamedType("Int8").Encode(),
          },
          "Int8Ptr": {
            Type: schema.NewNullableType(schema.NewNamedType("Int8")).Encode(),
          },
          "IntPtr": {
            Type: schema.NewNullableType(schema.NewNamedType("Int32")).Encode(),
          },
          "JSON": {
            Type: schema.NewNamedType("JSON").Encode(),
          },
          "JSONPtr": {
            Type: schema.NewNullableType(schema.NewNamedType("JSON")).Encode(),
          },
          "Map": {
            Type: schema.NewNamedType("JSON").Encode(),
          },
          "MapPtr": {
            Type: schema.NewNullableType(schema.NewNamedType("JSON")).Encode(),
          },
          "NamedArray": {
            Type: schema.NewArrayType(schema.NewNamedType("Author")).Encode(),
          },
          "NamedArrayPtr": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Author"))).Encode(),
          },
          "NamedObject": {
            Type: schema.NewNamedType("Author").Encode(),
          },
          "NamedObjectPtr": {
            Type: schema.NewNullableType(schema.NewNamedType("Author")).Encode(),
          },
          "Object": {
            Type: schema.NewNamedType("GetTypesArgumentsObject").Encode(),
          },
          "ObjectPtr": {
            Type: schema.NewNullableType(schema.NewNamedType("GetTypesArgumentsObjectPtr")).Encode(),
          },
          "PtrArrayBigInt": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("BigInt"))).Encode(),
          },
          "PtrArrayBigIntPtr": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("BigInt")))).Encode(),
          },
          "PtrArrayBool": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Boolean"))).Encode(),
          },
          "PtrArrayBoolPtr": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Boolean")))).Encode(),
          },
          "PtrArrayFloat32": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Float32"))).Encode(),
          },
          "PtrArrayFloat32Ptr": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Float32")))).Encode(),
          },
          "PtrArrayFloat64": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Float64"))).Encode(),
          },
          "PtrArrayFloat64Ptr": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Float64")))).Encode(),
          },
          "PtrArrayInt": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int32"))).Encode(),
          },
          "PtrArrayInt16": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int16"))).Encode(),
          },
          "PtrArrayInt16Ptr": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int16")))).Encode(),
          },
          "PtrArrayInt32": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int32"))).Encode(),
          },
          "PtrArrayInt32Ptr": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32")))).Encode(),
          },
          "PtrArrayInt64": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int64"))).Encode(),
          },
          "PtrArrayInt64Ptr": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int64")))).Encode(),
          },
          "PtrArrayInt8": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int8"))).Encode(),
          },
          "PtrArrayInt8Ptr": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int8")))).Encode(),
          },
          "PtrArrayIntPtr": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32")))).Encode(),
          },
          "PtrArrayJSON": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("JSON"))).Encode(),
          },
          "PtrArrayJSONPtr": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("JSON")))).Encode(),
          },
          "PtrArrayRawJSON": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("RawJSON"))).Encode(),
          },
          "PtrArrayRawJSONPtr": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("RawJSON")))).Encode(),
          },
          "PtrArrayString": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("String"))).Encode(),
          },
          "PtrArrayStringPtr": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("String")))).Encode(),
          },
          "PtrArrayTime": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("TimestampTZ"))).Encode(),
          },
          "PtrArrayTimePtr": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("TimestampTZ")))).Encode(),
          },
          "PtrArrayUUID": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("UUID"))).Encode(),
          },
          "PtrArrayUUIDPtr": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("UUID")))).Encode(),
          },
          "PtrArrayUint": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int32"))).Encode(),
          },
          "PtrArrayUint16": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int16"))).Encode(),
          },
          "PtrArrayUint16Ptr": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int16")))).Encode(),
          },
          "PtrArrayUint32": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int32"))).Encode(),
          },
          "PtrArrayUint32Ptr": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32")))).Encode(),
          },
          "PtrArrayUint64": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int64"))).Encode(),
          },
          "PtrArrayUint64Ptr": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int64")))).Encode(),
          },
          "PtrArrayUint8": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int8"))).Encode(),
          },
          "PtrArrayUint8Ptr": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int8")))).Encode(),
          },
          "PtrArrayUintPtr": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32")))).Encode(),
          },
          "RawJSON": {
            Type: schema.NewNamedType("RawJSON").Encode(),
          },
          "RawJSONPtr": {
            Type: schema.NewNullableType(schema.NewNamedType("RawJSON")).Encode(),
          },
          "String": {
            Type: schema.NewNamedType("String").Encode(),
          },
          "StringPtr": {
            Type: schema.NewNullableType(schema.NewNamedType("String")).Encode(),
          },
          "Text": {
            Type: schema.NewNamedType("String").Encode(),
          },
          "TextPtr": {
            Type: schema.NewNullableType(schema.NewNamedType("String")).Encode(),
          },
          "Time": {
            Type: schema.NewNamedType("TimestampTZ").Encode(),
          },
          "TimePtr": {
            Type: schema.NewNullableType(schema.NewNamedType("TimestampTZ")).Encode(),
          },
          "URL": {
            Type: schema.NewNamedType("URL").Encode(),
          },
          "UUID": {
            Type: schema.NewNamedType("UUID").Encode(),
          },
          "UUIDArray": {
            Type: schema.NewArrayType(schema.NewNamedType("UUID")).Encode(),
          },
          "UUIDPtr": {
            Type: schema.NewNullableType(schema.NewNamedType("UUID")).Encode(),
          },
          "Uint": {
            Type: schema.NewNamedType("Int32").Encode(),
          },
          "Uint16": {
            Type: schema.NewNamedType("Int16").Encode(),
          },
          "Uint16Ptr": {
            Type: schema.NewNullableType(schema.NewNamedType("Int16")).Encode(),
          },
          "Uint32": {
            Type: schema.NewNamedType("Int32").Encode(),
          },
          "Uint32Ptr": {
            Type: schema.NewNullableType(schema.NewNamedType("Int32")).Encode(),
          },
          "Uint64": {
            Type: schema.NewNamedType("Int64").Encode(),
          },
          "Uint64Ptr": {
            Type: schema.NewNullableType(schema.NewNamedType("Int64")).Encode(),
          },
          "Uint8": {
            Type: schema.NewNamedType("Int8").Encode(),
          },
          "Uint8Ptr": {
            Type: schema.NewNullableType(schema.NewNamedType("Int8")).Encode(),
          },
          "UintPtr": {
            Type: schema.NewNullableType(schema.NewNamedType("Int32")).Encode(),
          },
          "array_bigint_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("BigInt"))).Encode(),
          },
          "array_bigint_ptr_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("BigInt")))).Encode(),
          },
          "array_bool_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Boolean"))).Encode(),
          },
          "array_bool_ptr_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Boolean")))).Encode(),
          },
          "array_float32_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Float32"))).Encode(),
          },
          "array_float32_ptr_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Float32")))).Encode(),
          },
          "array_float64_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Float64"))).Encode(),
          },
          "array_float64_ptr_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Float64")))).Encode(),
          },
          "array_int16_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int16"))).Encode(),
          },
          "array_int16_ptr_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int16")))).Encode(),
          },
          "array_int32_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int32"))).Encode(),
          },
          "array_int32_ptr_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32")))).Encode(),
          },
          "array_int64_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int64"))).Encode(),
          },
          "array_int64_ptr_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int64")))).Encode(),
          },
          "array_int8_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int8"))).Encode(),
          },
          "array_int8_ptr_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int8")))).Encode(),
          },
          "array_int_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int32"))).Encode(),
          },
          "array_int_ptr_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32")))).Encode(),
          },
          "array_json_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("JSON"))).Encode(),
          },
          "array_json_ptr_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("JSON")))).Encode(),
          },
          "array_raw_json_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("RawJSON"))).Encode(),
          },
          "array_raw_json_ptr_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("RawJSON")))).Encode(),
          },
          "array_string_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("String"))).Encode(),
          },
          "array_string_ptr_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("String")))).Encode(),
          },
          "array_time_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("TimestampTZ"))).Encode(),
          },
          "array_time_ptr_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("TimestampTZ")))).Encode(),
          },
          "array_uint16_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int16"))).Encode(),
          },
          "array_uint16_ptr_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int16")))).Encode(),
          },
          "array_uint32_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int32"))).Encode(),
          },
          "array_uint32_ptr_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32")))).Encode(),
          },
          "array_uint64_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int64"))).Encode(),
          },
          "array_uint64_ptr_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int64")))).Encode(),
          },
          "array_uint8_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int8"))).Encode(),
          },
          "array_uint8_ptr_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int8")))).Encode(),
          },
          "array_uint_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("Int32"))).Encode(),
          },
          "array_uint_ptr_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("Int32")))).Encode(),
          },
          "array_uuid_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("UUID"))).Encode(),
          },
          "array_uuid_ptr_empty": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNullableType(schema.NewNamedType("UUID")))).Encode(),
          },
          "bigint_empty": {
            Type: schema.NewNullableType(schema.NewNamedType("BigInt")).Encode(),
          },
          "bool_empty": {
            Type: schema.NewNullableType(schema.NewNamedType("Boolean")).Encode(),
          },
          "date_empty": {
            Type: schema.NewNullableType(schema.NewNamedType("Date")).Encode(),
          },
          "float32_empty": {
            Type: schema.NewNullableType(schema.NewNamedType("Float32")).Encode(),
          },
          "float64_empty": {
            Type: schema.NewNullableType(schema.NewNamedType("Float64")).Encode(),
          },
          "int16_empty": {
            Type: schema.NewNullableType(schema.NewNamedType("Int16")).Encode(),
          },
          "int32_empty": {
            Type: schema.NewNullableType(schema.NewNamedType("Int32")).Encode(),
          },
          "int64_empty": {
            Type: schema.NewNullableType(schema.NewNamedType("Int64")).Encode(),
          },
          "int8_empty": {
            Type: schema.NewNullableType(schema.NewNamedType("Int8")).Encode(),
          },
          "int_empty": {
            Type: schema.NewNullableType(schema.NewNamedType("Int32")).Encode(),
          },
          "string_empty": {
            Type: schema.NewNullableType(schema.NewNamedType("String")).Encode(),
          },
          "time_empty": {
            Type: schema.NewNullableType(schema.NewNamedType("TimestampTZ")).Encode(),
          },
          "uint16_empty": {
            Type: schema.NewNullableType(schema.NewNamedType("Int16")).Encode(),
          },
          "uint32_empty": {
            Type: schema.NewNullableType(schema.NewNamedType("Int32")).Encode(),
          },
          "uint64_empty": {
            Type: schema.NewNullableType(schema.NewNamedType("Int64")).Encode(),
          },
          "uint8_empty": {
            Type: schema.NewNullableType(schema.NewNamedType("Int8")).Encode(),
          },
          "uint_empty": {
            Type: schema.NewNullableType(schema.NewNamedType("Int32")).Encode(),
          },
          "url_empty": {
            Type: schema.NewNullableType(schema.NewNamedType("URL")).Encode(),
          },
          "uuid_empty": {
            Type: schema.NewNullableType(schema.NewNamedType("UUID")).Encode(),
          },
          "where": {
            Type: schema.NewNullableType(schema.NewPredicateType("Author")).Encode(),
          },
        },
      },
      {
        Name: "hello",
        Description: toPtr("sends a hello message"),
        ResultType: schema.NewNullableType(schema.NewNamedType("HelloResult")).Encode(),
        Arguments: map[string]schema.ArgumentInfo{
        },
      },
    },
    Procedures: []schema.ProcedureInfo{
      {
        Name: "createAuthor",
        Description: toPtr("creates an author"),
        ResultType: schema.NewNullableType(schema.NewNamedType("CreateAuthorResult")).Encode(),
        Arguments: map[string]schema.ArgumentInfo{
          "name": {
            Type: schema.NewNamedType("String").Encode(),
          },
          "where": {
            Type: schema.NewNullableType(schema.NewPredicateType("Author")).Encode(),
          },
        },
      },
      {
        Name: "createAuthors",
        Description: toPtr("creates a list of authors"),
        ResultType: schema.NewArrayType(schema.NewNamedType("CreateAuthorResult")).Encode(),
        Arguments: map[string]schema.ArgumentInfo{
          "names": {
            Type: schema.NewArrayType(schema.NewNamedType("String")).Encode(),
          },
        },
      },
      {
        Name: "create_article",
        Description: toPtr("CreateArticle"),
        ResultType: schema.NewNullableType(schema.NewNamedType("CreateArticleResult")).Encode(),
        Arguments: map[string]schema.ArgumentInfo{
          "author": {
            Type: schema.NewNamedType("CreateArticleArgumentsAuthor").Encode(),
          },
        },
      },
      {
        Name: "doCustomHeaders",
        ResultType: schema.NewNullableType(schema.NewNamedType("CustomHeadersResult_array_nullable_BaseAuthor")).Encode(),
        Arguments: map[string]schema.ArgumentInfo{
          "headers": {
            Type: schema.NewNamedType("JSON").Encode(),
          },
          "input": {
            Type: schema.NewNullableType(schema.NewArrayType(schema.NewNamedType("BaseAuthor"))).Encode(),
          },
          "other": {
            Type: schema.NewNullableType(schema.NewNamedType("GetCustomHeadersOther_int")).Encode(),
          },
        },
      },
      {
        Name: "increase",
        Description: toPtr("Increase"),
        ResultType: schema.NewNamedType("Int32").Encode(),
        Arguments: map[string]schema.ArgumentInfo{
        },
      },
    },
    ScalarTypes: schema.SchemaResponseScalarTypes{
      "BigInt": schema.ScalarType{
        AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
        ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
        Representation:      schema.NewTypeRepresentationBigInteger().Encode(),
      },
      "Boolean": schema.ScalarType{
        AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
        ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
        Representation:      schema.NewTypeRepresentationBoolean().Encode(),
      },
      "Bytes": schema.ScalarType{
        AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
        ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
        Representation:      schema.NewTypeRepresentationBytes().Encode(),
      },
      "CommentString": schema.ScalarType{
        AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
        ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
        Representation:      schema.NewTypeRepresentationJSON().Encode(),
      },
      "Date": schema.ScalarType{
        AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
        ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
        Representation:      schema.NewTypeRepresentationDate().Encode(),
      },
      "Duration": schema.ScalarType{
        AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
        ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
        Representation:      schema.NewTypeRepresentationJSON().Encode(),
      },
      "DurationInt64": schema.ScalarType{
        AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
        ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
        Representation:      schema.NewTypeRepresentationInt64().Encode(),
      },
      "DurationString": schema.ScalarType{
        AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
        ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
        Representation:      schema.NewTypeRepresentationString().Encode(),
      },
      "Float32": schema.ScalarType{
        AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
        ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
        Representation:      schema.NewTypeRepresentationFloat32().Encode(),
      },
      "Float64": schema.ScalarType{
        AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
        ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
        Representation:      schema.NewTypeRepresentationFloat64().Encode(),
      },
      "Foo": schema.ScalarType{
        AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
        ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
        Representation:      schema.NewTypeRepresentationJSON().Encode(),
      },
      "Int16": schema.ScalarType{
        AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
        ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
        Representation:      schema.NewTypeRepresentationInt16().Encode(),
      },
      "Int32": schema.ScalarType{
        AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
        ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
        Representation:      schema.NewTypeRepresentationInt32().Encode(),
      },
      "Int64": schema.ScalarType{
        AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
        ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
        Representation:      schema.NewTypeRepresentationInt64().Encode(),
      },
      "Int8": schema.ScalarType{
        AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
        ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
        Representation:      schema.NewTypeRepresentationInt8().Encode(),
      },
      "JSON": schema.ScalarType{
        AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
        ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
        Representation:      schema.NewTypeRepresentationJSON().Encode(),
      },
      "RawJSON": schema.ScalarType{
        AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
        ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
        Representation:      schema.NewTypeRepresentationJSON().Encode(),
      },
      "SomeEnum": schema.ScalarType{
        AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
        ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
        Representation:      schema.NewTypeRepresentationEnum([]string{"foo", "bar"}).Encode(),
      },
      "String": schema.ScalarType{
        AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
        ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
        Representation:      schema.NewTypeRepresentationString().Encode(),
      },
      "TimestampTZ": schema.ScalarType{
        AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
        ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
        Representation:      schema.NewTypeRepresentationTimestampTZ().Encode(),
      },
      "URL": schema.ScalarType{
        AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
        ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
        Representation:      schema.NewTypeRepresentationString().Encode(),
      },
      "UUID": schema.ScalarType{
        AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
        ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
        Representation:      schema.NewTypeRepresentationUUID().Encode(),
      },
    },
  }
}